name: Python CI

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request: {}

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      
      - name: Install & test (x86_64)
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          rm -r python/space_drive_game
          pip install pytest
          pip install space_drive_game --no-index --no-deps --find-links dist --force-reinstall
          pytest python/tests

      - name: Install & test (aarch64, armv7, s390x, ppc64le)
        if: ${{ !startsWith(matrix.target, 'x86') && !startsWith(matrix.target, 'i686') }}
        uses: uraimo/run-on-arch-action@v2.5.0
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
          run: |
            rm -r python/space_drive_game
            python3 -m pip install -U pip pytest
            python3 -m pip install space_drive_game --no-index --no-deps --find-links dist --force-reinstall
            pytest

      - name: Upload wheels
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path python/Cargo.toml
          sccache: 'true'

      - name: Install & test
        shell: bash
        run: |
          rm -r python/space_drive_game
          pip install pytest
          pip install space_drive_game --no-index --no-deps --find-links dist --force-reinstall
          pytest python/tests

      - name: Upload wheels
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path python/Cargo.toml
          sccache: 'true'

      - name: Install & test (x86_64)
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          rm -r python/space_drive_game
          pip install pytest
          pip install space_drive_game --no-index --no-deps --find-links dist --force-reinstall
          pytest python/tests

      - name: Upload wheels
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
